openapi: 3.1.0
info:
  title: Apricate API
  version: '0.5'
  summary: Apricate is a multiplayer game built on a free web API.
  contact:
    name: James (Greenitthe)
    email: james@apricate.io
  license:
    identifier: GPL-3.0-only
    name: GPL-3
  description: 'Apricate is a multiplayer game built on a free web API. You control a magic farm and several assistants who help sell your plants in town. Corner the market on onions or spend your days breeding the perfect hybrid, or find your own way in the world.'
servers:
  - url: 'https://apricate.io/api'
paths:
  /users:
    get:
      summary: Get Users
      operationId: Get Users
      description: 'Get lists of registered usernames with various filters: unique, active, etc.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      unique_users:
                        - Greenitthe
                        - Viridis
                        - Green
                      active_users:
                        - Green
                        - Greenitthe
                        - Viridis
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - unique_users
                      - active_users
                    properties:
                      unique_users:
                        type: array
                        items:
                          type: string
                      active_users:
                        type: array
                        items:
                          type: string
                required:
                  - code
                  - message
                  - data
      security: []
      tags:
        - Metrics
  '/users/{username}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
        description: Case-insensitive username
    get:
      summary: Get Specific User's Public Info
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                  data:
                    $ref: ../models/Public-User-Info.yaml
      operationId: Get Specific User
      description: Gets the public info of a specified user
      security: []
  '/users/{username}/claim':
    parameters:
      - schema:
          type: string
          minLength: 1
          maxLength: 32
        name: username
        in: path
        required: true
        description: Case-insensitive username
    post:
      summary: Claim Username and Create User
      operationId: Create User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRyaWFuIn0.KvgNKsC8YXAsMTox6mX5T1UJXuHQNx9LQ574v-c6zKo
                      username: trian
                      title: Noob
                      ledger:
                        currencies:
                          Coins: 100
                        favor:
                          Vince Kosuga: 50
                        escrow: {}
                      user-since: 1647896254
                      achievements:
                        - Noob
                      contracts:
                        - trian|Contract-0
                      assistants:
                        - trian|Assistant-0
                      farms:
                        - trian|Farm-TS-PR-HF
                      plots:
                        - trian|Farm-TS-PR-HF|Plot-0
                        - trian|Farm-TS-PR-HF|Plot-1
                        - trian|Farm-TS-PR-HF|Plot-2
                        - trian|Farm-TS-PR-HF|Plot-3
                      warehouses:
                        - trian|Warehouse-TS-PR-HF
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/User-Info.yaml
                required:
                  - code
                  - message
                  - data
      description: 'Attempt to create new user with the specified username (1-32 chars, alphanumeric plus "-" and "_")'
      tags:
        - Users
      security: []
  /my/user:
    get:
      summary: Secure Get User
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      token: redacted-jwt
                      username: Greenitthe
                      title: Owner
                      ledger:
                        currencies:
                          Coins: 1000
                        favor:
                          Vince Kosuga: 50
                        escrow: {}
                      user-since: 1647909007
                      achievements:
                        - Owner
                        - Contributor
                        - Noob
                      contracts:
                        - Greenitthe|Contract-0
                      assistants:
                        - Greenitthe|Assistant-0
                      farms:
                        - Greenitthe|Farm-TS-PR-HF
                      plots:
                        - Greenitthe|Farm-TS-PR-HF|Plot-0
                        - Greenitthe|Farm-TS-PR-HF|Plot-1
                        - Greenitthe|Farm-TS-PR-HF|Plot-2
                        - Greenitthe|Farm-TS-PR-HF|Plot-3
                      warehouses:
                        - Greenitthe|Warehouse-TS-PR-HF
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/User-Info.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Secure Get User
      description: 'Get user info, including non-public information'
  /plants:
    get:
      summary: Get Plants
      tags:
        - Plants
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      Cabbage:
                        name: Cabbage
                        description: 'The Cabbage is a mundane plant that grows above ground. It is relatively fast growing and easy to care for, not requiring any additional watering in most climates'
                        growth_stages:
                          - name: Seed
                            description: 'You may fertilize cabbage as a seed to increase yields. Any fertilizer will do, cabbage doesn''t respond to higher quality fertilizers'
                            action: Fertilize
                            optional: true
                            action_to_skip: Skip
                            consumable_options:
                              - name: Fertilizer
                                quantity: 1
                              - name: Enchanted Fertilizer
                                quantity: 1
                              - name: Dragon Fertilizer
                                quantity: 1
                              - name: Enchanted Dragon Fertilizer
                                quantity: 1
                            added_yield: 0.5
                            growth_time: 30
                          - name: Young Plant
                            description: Cabbage must be weeded before harvest
                            action: Weed
                            growth_time: 60
                          - name: Adult Plant
                            description: Cabbage must be harvested
                            action: Trim
                            harvestable:
                              produce:
                                Cabbage: 1
                              seeds:
                                Cabbage Seeds: 1
                              final_harvest: true
                      Gulb:
                        name: Gulb
                        description: 'The Gulb plant grows from a Gulb Bulb, and may be harvested for Gulb Nuts'
                        growth_stages:
                          - name: Bulb
                            description: Gulb Bulbs required enchanted water to sprout
                            action: Water
                            consumable_options:
                              - name: Enchanted Water
                                quantity: 1
                            growth_time: 60
                          - name: Seedling
                            description: Gulb seedlings may be fertilized for additional yield
                            action: Fertilize
                            optional: true
                            action_to_skip: Skip
                            consumable_options:
                              - name: Fertilizer
                                quantity: 1
                                added_yield: 0.1
                              - name: Enchanted Fertilizer
                                quantity: 1
                                added_yield: 0.25
                              - name: Dragon Fertilizer
                                quantity: 1
                                added_yield: 0.25
                              - name: Enchanted Dragon Fertilizer
                                quantity: 1
                                added_yield: 0.5
                            growth_time: 60
                          - name: Young Plant
                            description: Gulb plants may be hilled for additional yield
                            action: Hill
                            optional: true
                            action_to_skip: Skip
                            added_yield: 1
                            growth_time: 600
                          - name: Adolescent Plant
                            description: Gulb plants must be weeded before harvest
                            action: Weed
                            growth_time: 180
                          - name: Adult Plant - Harvest
                            description: Gulb plants may be harvested early as adults or fertilized again for additional yield
                            action: Dig
                            optional: true
                            action_to_skip: Skip
                            harvestable:
                              seeds:
                                Gulb Bulb: 0.5
                              goods:
                                Gulb Nut: 0.75
                              final_harvest: true
                          - name: Adult Plant - Fertilize
                            description: Wild Flora plants must be fertilized again for additional yield
                            action: Fertilize
                            consumable_options:
                              - name: Fertilizer
                                quantity: 2
                              - name: Enchanted Fertilizer
                                quantity: 2
                              - name: Dragon Fertilizer
                                quantity: 2
                                added_yield: 0.25
                              - name: Enchanted Dragon Fertilizer
                                quantity: 2
                                added_yield: 0.75
                            added_yield: 0.25
                            growth_time: 120
                          - name: Mature Plant - Harvest
                            description: Mature Wild Flora plants must be harvested
                            action: Dig
                            harvestable:
                              seeds:
                                Gulb Bulb: 1
                              goods:
                                Gulb Nut: 1
                              final_harvest: true
                      Potato:
                        name: Potato
                        description: The hardy Potato plant is a mundane plant that grows underground. It is an extremely common staple food that grows quickly and can be harvested multiple times. Rather than using seeds is planted as the Potatoes themselves
                        growth_stages:
                          - name: Seed
                            description: Potatoes require water to sprout
                            action: Water
                            consumable_options:
                              - name: Water
                                quantity: 1
                              - name: Enchanted Water
                                quantity: 1
                                added_yield: 0.1
                            growth_time: 30
                          - name: Seedling
                            description: Potatoes may be fertilized to increase yield
                            action: Fertilize
                            optional: true
                            action_to_skip: Skip
                            consumable_options:
                              - name: Fertilizer
                                quantity: 1
                                added_yield: 0.5
                              - name: Enchanted Fertilizer
                                quantity: 1
                                added_yield: 0.75
                              - name: Dragon Fertilizer
                                quantity: 1
                                added_yield: 1.5
                              - name: Enchanted Dragon Fertilizer
                                quantity: 1
                                added_yield: 3
                            growth_time: 60
                          - name: Young Plant
                            description: Potatoes may be hilled to increase yield
                            action: Hill
                            optional: true
                            action_to_skip: Skip
                            added_yield: 1
                            growth_time: 60
                          - name: Adult Plant - 1st Harvest
                            description: 'Potatoes must be harvested, and may be harvested again after a while'
                            action: Dig
                            growth_time: 120
                            harvestable:
                              produce:
                                Potato: 1
                          - name: Adult Plant - 2nd Harvest
                            description: 'Potatoes must be harvested, and may be harvested one final time after a while'
                            action: Dig
                            growth_time: 120
                            harvestable:
                              produce:
                                Potato: 1
                          - name: Adult Plant - 3rd Harvest
                            description: 'Potatoes must be harvested, and may be harvested one final time after a while'
                            action: Dig
                            harvestable:
                              produce:
                                Potato: 1
                              final_harvest: true
                      Shelvis Fig:
                        name: Shelvis Fig
                        description: 'The Shelvis Fig is a mundane plant with fruit that grows on a shrub above ground. It requires a lot of water to grow, grow with moderate speed, may be harvested twice, and as a specialty of Skellig, its seeds are not available for public sale'
                        growth_stages:
                          - name: Seed
                            description: Shelvis Figs must be sprouted before transplanting to dirt
                            action: Sprout
                            consumable_options:
                              - name: Water
                                quantity: 10
                              - name: Enchanted Water
                                quantity: 10
                                added_yield: 0.1
                            growth_time: 60
                          - name: Sprout - 1st Watering
                            description: Shelvis Figs require copious amounts of water to grow into seedlings
                            action: Water
                            consumable_options:
                              - name: Water
                                quantity: 10
                              - name: Enchanted Water
                                quantity: 10
                                added_yield: 0.1
                            growth_time: 120
                          - name: Sprout - 2nd Watering
                            description: Shelvis Figs require copious amounts of water to grow into seedlings
                            action: Water
                            consumable_options:
                              - name: Water
                                quantity: 10
                              - name: Enchanted Water
                                quantity: 10
                                added_yield: 0.1
                            growth_time: 120
                          - name: Seedling
                            description: Shelvis Figs must be planted after sprouting
                            action: Dig
                            growth_time: 240
                          - name: Young Plant - 1st Watering
                            description: Shelvis Figs require continual watering to keep growing
                            action: Water
                            consumable_options:
                              - name: Water
                                quantity: 15
                              - name: Enchanted Water
                                quantity: 15
                                added_yield: 0.1
                            growth_time: 240
                          - name: Young Plant - 2nd Watering
                            description: Shelvis Figs require continual watering to keep growing
                            action: Water
                            consumable_options:
                              - name: Water
                                quantity: 15
                              - name: Enchanted Water
                                quantity: 15
                                added_yield: 0.1
                            growth_time: 240
                          - name: Adolescent Plant
                            description: Shelvis Figs may be trimmed before harvest to increase yield
                            action: Trim
                            optional: true
                            action_to_skip: Skip
                            added_yield: 0.5
                            growth_time: 240
                          - name: Adult Plant - 1st Harvest
                            description: 'Shelvis Figs must be harvested as adults, but don''t give seeds yet, and will require additional water to provide fruit another time'
                            action: Trim
                            growth_time: 30
                            harvestable:
                              produce:
                                Shelvis Fig: 0.75
                          - name: Adult Plant - Water
                            description: Shelvis Figs require additional water to provide fruit another time
                            action: Water
                            consumable_options:
                              - name: Water
                                quantity: 40
                              - name: Enchanted Water
                                quantity: 40
                                added_yield: 0.25
                            growth_time: 360
                          - name: Adult Plant - 2nd Harvest
                            description: 'Shelvis Figs must be harvested a 2nd time, including gathering seeds'
                            action: Trim
                            harvestable:
                              produce:
                                Shelvis Fig: 1
                              seeds:
                                Shelvis Fig Seeds: 1
                              final_harvest: true
                      Spectral Grass:
                        name: Spectral Grass
                        description: 'Spectral Grass is the most basic plant you can grow, and is commonly used to create lightweight clothing ideal for travelling in most climates'
                        growth_stages:
                          - name: Seed
                            description: 'Spectral Grass doesn''t require much care and will grow in almost any climate, simply wait for it to grow'
                            action: Wait
                            growth_time: 30
                          - name: Young Plant
                            description: Spectral Grass must be trimmed before harvesting
                            action: Trim
                            growth_time: 30
                          - name: Adult Plant
                            description: Spectral Grass must be harvested as an adult
                            action: Reap
                            harvestable:
                              seeds:
                                Spectral Grass Seeds: 1
                              goods:
                                Spectral Fiber: 1
                              final_harvest: true
                      Spinosus Vas:
                        name: Spinosus Vas
                        description: 'The Spinosus Vas is a bulbous plant with sharp spikes protruding at all angles. It is able to draw water from the air itself, allowing it to accumulate large amounts of water in its body even in arid climates'
                        growth_stages:
                          - name: Seed
                            description: The Spinosus Vas requires a bit of water to kickstart the growth process
                            action: Water
                            consumable_options:
                              - name: Water
                                quantity: 5
                              - name: Enchanted Water
                                quantity: 5
                                added_yield: 0.25
                            growth_time: 30
                          - name: Young Plant - Shade
                            description: The Spinosus Vas may be shaded while it grows to improve yield
                            action: Shade
                            optional: true
                            action_to_skip: Skip
                            added_yield: 1
                            growth_time: 45
                          - name: Young Plant - Weed
                            description: The Spinosus Vas may be weeded to improve yield
                            action: Weed
                            optional: true
                            action_to_skip: Skip
                            added_yield: 0.25
                            growth_time: 15
                          - name: Young Plant - Grow
                            description: The Spinosus Vas takes a while to grow and absorb water
                            action: Wait
                            growth_time: 30
                          - name: Adult Plant
                            description: 'Spectral Grass must be harvested as an adult, though rarely provides seeds'
                            action: Dig
                            harvestable:
                              seeds:
                                Spinosus Vas Seeds: 0.01
                              goods:
                                Enchanted Water: 0.1
                                Water: 10
                              final_harvest: true
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    description: 'map[string]Plant'
                    properties:
                      map_key_plant_name:
                        $ref: ../models/PlantDefinition.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Plants
      description: Get info on all plants
      security: []
  '/plants/{plant-name}':
    parameters:
      - schema:
          type: string
        name: plant-name
        in: path
        required: true
        description: 'Name of plant, case insensitive, can replace spaces with underscores'
    get:
      summary: Get Specific Plant
      tags:
        - Plants
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      name: Spectral Grass
                      description: 'Spectral Grass is the most basic plant you can grow, and is commonly used to create lightweight clothing ideal for travelling in most climates'
                      growth_stages:
                        - name: Seed
                          description: 'Spectral Grass doesn''t require much care and will grow in almost any climate, simply wait for it to grow'
                          action: Wait
                          growth_time: 30
                        - name: Young Plant
                          description: Spectral Grass must be trimmed before harvesting
                          action: Trim
                          growth_time: 30
                        - name: Adult Plant
                          description: Spectral Grass must be harvested as an adult
                          action: Reap
                          harvestable:
                            seeds:
                              Spectral Grass Seeds: 1
                            goods:
                              Spectral Fiber: 1
                            final_harvest: true
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/PlantDefinition.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Specific Plant
      description: Get a specified plant
      security: []
  '/plants/{plant-name}/stage/{stage-num}':
    parameters:
      - schema:
          type: string
        name: plant-name
        in: path
        required: true
        description: 'Name of plant, case insensitive, can replace spaces with underscores'
      - schema:
          type: string
        name: stage-num
        in: path
        required: true
        description: Stage number to select
    get:
      summary: Get Specific Plant Growth Stage
      tags:
        - Plants
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      name: Adult Plant - Fertilize
                      description: Wild Flora plants must be fertilized again for additional yield
                      action: Fertilize
                      consumable_options:
                        - name: Fertilizer
                          quantity: 2
                        - name: Enchanted Fertilizer
                          quantity: 2
                        - name: Dragon Fertilizer
                          quantity: 2
                          added_yield: 0.25
                        - name: Enchanted Dragon Fertilizer
                          quantity: 2
                          added_yield: 0.75
                      added_yield: 0.25
                      growth_time: 120
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/Growth-Stage.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Specific Plant Growth Stage
      description: Get the growth stage of a particular plant
      security: []
  /my/warehouses:
    get:
      summary: Get My Warehouses
      tags:
        - Warehouses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      - uuid: Greenitthe|Warehouse-TS-PR-HF
                        location_symbol: TS-PR-HF
                        tools:
                          Drying Rack: 1
                          Hoe: 1
                          Knife: 1
                          Pestle and Mortar: 1
                          Pitchfork: 1
                          Rake: 1
                          Scroll of Hyperspecific Cloud Cover: 1
                          Shears: 1
                          Sickle: 1
                          Spade: 1
                          Sprouting Pot: 1
                          Water Wand: 1
                        produce:
                          Potato|Tiny:
                            name: Potato
                            quantity: 1000
                            size: Miniature
                        seeds:
                          Cabbage Seeds: 1000
                          Gulb Bulb: 1000
                          Potato Chunk: 1000
                          Shelvis Fig Seeds: 1000
                          Spectral Grass Seeds: 1000
                          Spinosus Vas Seeds: 1000
                        goods:
                          Dragon Fertilizer: 1000
                          Enchanted Dragon Fertilizer: 1000
                          Enchanted Fertilizer: 1000
                          Enchanted Water: 1000
                          Fertilizer: 1000
                          Water: 1000
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      $ref: ../models/Warehouse.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get My Warehouses
      description: Get the info of all warehouses associated with my user
    parameters: []
  '/my/warehouses/{location-symbol}':
    parameters:
      - schema:
          type: string
        name: location-symbol
        in: path
        required: true
        description: The warehouse's location symbol
    get:
      summary: Get Specific Warehouse
      tags:
        - Warehouses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data: {}
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/Warehouse.yaml
                required:
                  - code
                  - message
                  - data
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: Get Specific Warehouse
      description: Get info on a specific warehouse
  /my/markets:
    get:
      summary: Get Markets
      tags:
        - Markets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      - name: Homestead Farm Outlet
                        location_symbol: TS-PR-HF
                        imports:
                          produce:
                            Cabbage: 1
                            Potato: 1
                            Shelvis Fig: 10
                          seeds:
                            Cabbage Seeds: 2
                            Gulb Bulb: 25
                            Potato Chunk: 1
                            Shelvis Fig Seeds: 50
                            Spectral Grass Seeds: 1
                            Spinosus Vas Seeds: 2
                          goods:
                            Enchanted Water: 5
                            Gulb Nut: 4
                            Spectral Fiber: 3
                            Water: 1
                          tools:
                            Spade: 1
                        exports:
                          produce:
                            Potato: 2
                          seeds:
                            Cabbage Seeds: 4
                            Gulb Bulb: 50
                            Potato Chunk: 2
                            Shelvis Fig Seeds: 100
                            Spectral Grass Seeds: 2
                            Spinosus Vas Seeds: 5
                          goods:
                            Dragon Fertilizer: 15
                            Enchanted Dragon Fertilizer: 20
                            Enchanted Fertilizer: 10
                            Enchanted Water: 10
                            Fertilizer: 5
                            Water: 2
                          tools:
                            Hoe: 250
                            Pitchfork: 500
                            Rake: 150
                            Scroll of Hyperspecific Cloud Cover: 250
                            Shears: 100
                            Sickle: 100
                            Spade: 100
                            Sprouting Pot: 1000
                            Water Wand: 250
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      $ref: ../models/Market.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Markets
      description: Get info on all markets visible to the user
    parameters: []
  '/my/markets/{location-symbol}':
    parameters:
      - schema:
          type: string
        name: location-symbol
        in: path
        required: true
        description: The market's location symbol
    get:
      summary: Get Specific Market
      tags:
        - Markets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data: {}
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/Market.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Specific Market
      description: Get data on a specific market
  '/my/markets/{location-symbol}/order':
    parameters:
      - schema:
          type: string
        name: location-symbol
        in: path
        required: true
        description: The market's location symbol
    patch:
      summary: Place Market Order
      operationId: Place Market Order
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      ledger:
                        currencies:
                          Coins: 3000
                        favor:
                          Vince Kosuga: 50
                        escrow: {}
                      warehouse:
                        uuid: Greenitthe|Warehouse-TS-PR-HF
                        location_symbol: TS-PR-HF
                        tools:
                          Drying Rack: 1
                          Hoe: 1
                          Knife: 1
                          Pestle and Mortar: 1
                          Pitchfork: 1
                          Rake: 1
                          Scroll of Hyperspecific Cloud Cover: 1
                          Shears: 1
                          Sickle: 1
                          Spade: 1
                          Sprouting Pot: 1
                          Water Wand: 1
                        produce: {}
                        seeds:
                          Cabbage Seeds: 1000
                          Gulb Bulb: 1000
                          Potato Chunk: 1000
                          Shelvis Fig Seeds: 1000
                          Spectral Grass Seeds: 1000
                          Spinosus Vas Seeds: 1000
                        goods:
                          Dragon Fertilizer: 1000
                          Enchanted Dragon Fertilizer: 1000
                          Enchanted Fertilizer: 1000
                          Enchanted Water: 1000
                          Fertilizer: 1000
                          Water: 1000
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - ledger
                      - warehouse
                    properties:
                      ledger:
                        type: object
                        required:
                          - currencies
                          - favor
                          - escrow
                        properties:
                          currencies:
                            type: object
                          favor:
                            type: object
                          escrow:
                            type: object
                      warehouse:
                        $ref: ../models/Warehouse.yaml
                required:
                  - code
                  - message
                  - data
      description: Place a market buy/sell order
      tags:
        - Markets
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  order_type: MARKET
                  transaction_type: SELL
                  item_category: PRODUCE
                  item_name: Potato|Tiny
                  quantity: 1000
              properties:
                order_type:
                  type: string
                  minLength: 1
                  enum:
                    - MARKET
                transaction_type:
                  type: string
                  minLength: 1
                  enum:
                    - BUY
                    - SELL
                item_category:
                  type: string
                  minLength: 1
                  enum:
                    - PRODUCE
                    - GOODS
                    - SEEDS
                    - TOOLS
                item_name:
                  type: string
                  minLength: 1
                quantity:
                  type: number
              required:
                - order_type
                - transaction_type
                - item_category
                - item_name
                - quantity
        description: Request body specifies the market order
  /my/plots:
    get:
      summary: Get Plots
      tags:
        - Plots
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      Greenitthe|Farm-TS-PR-HF|Plot-0:
                        uuid: Greenitthe|Farm-TS-PR-HF|Plot-0
                        location_symbol: TS-PR-HF
                        id: 0
                        size: Average
                        plant_quantity: 0
                        growth_complete_timestamp: 0
                        plant: null
                      Greenitthe|Farm-TS-PR-HF|Plot-1:
                        uuid: Greenitthe|Farm-TS-PR-HF|Plot-1
                        location_symbol: TS-PR-HF
                        id: 1
                        size: Average
                        plant_quantity: 0
                        growth_complete_timestamp: 0
                        plant: null
                      Greenitthe|Farm-TS-PR-HF|Plot-2:
                        uuid: Greenitthe|Farm-TS-PR-HF|Plot-2
                        location_symbol: TS-PR-HF
                        id: 2
                        size: Modest
                        plant_quantity: 0
                        growth_complete_timestamp: 0
                        plant: null
                      Greenitthe|Farm-TS-PR-HF|Plot-3:
                        uuid: Greenitthe|Farm-TS-PR-HF|Plot-3
                        location_symbol: TS-PR-HF
                        id: 3
                        size: Modest
                        plant_quantity: 0
                        growth_complete_timestamp: 0
                        plant: null
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      map_key_plot_uuid:
                        $ref: ../models/Plot.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Plots
      description: Gets info on all plots associated with user
    parameters: []
  '/my/plots/{plot-id}':
    parameters:
      - schema:
          type: string
        name: plot-id
        in: path
        required: true
        description: 'The plot id, e.g. TS-PR-HF!Plot-0'
    get:
      summary: Get Specific Plot
      tags:
        - Plots
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      uuid: Greenitthe|Farm-TS-PR-HF|Plot-0
                      location_symbol: TS-PR-HF
                      id: 0
                      size: Average
                      plant_quantity: 0
                      growth_complete_timestamp: 0
                      plant: null
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/Plot.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Specific Plot
      description: Get info on specific plot
  '/my/plots/{plot-id}/plant':
    parameters:
      - schema:
          type: string
        name: plot-id
        in: path
        required: true
        description: 'The plot id, e.g. TS-PR-HF!Plot-0'
    post:
      summary: Plant Plot
      operationId: Plant Plot
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      warehouse:
                        uuid: Greenitthe|Warehouse-TS-PR-HF
                        location_symbol: TS-PR-HF
                        tools:
                          Drying Rack: 1
                          Hoe: 1
                          Knife: 1
                          Pestle and Mortar: 1
                          Pitchfork: 1
                          Rake: 1
                          Scroll of Hyperspecific Cloud Cover: 1
                          Shears: 1
                          Sickle: 1
                          Spade: 1
                          Sprouting Pot: 1
                          Water Wand: 1
                        produce: {}
                        seeds:
                          Cabbage Seeds: 1000
                          Gulb Bulb: 1000
                          Potato Chunk: 1000
                          Shelvis Fig Seeds: 1000
                          Spectral Grass Seeds: 992
                          Spinosus Vas Seeds: 1000
                        goods:
                          Dragon Fertilizer: 1000
                          Enchanted Dragon Fertilizer: 1000
                          Enchanted Fertilizer: 1000
                          Enchanted Water: 1000
                          Fertilizer: 1000
                          Water: 1000
                      plot:
                        uuid: Greenitthe|Farm-TS-PR-HF|Plot-0
                        location_symbol: TS-PR-HF
                        id: 0
                        size: Average
                        plant_quantity: 8
                        growth_complete_timestamp: 1647916993
                        plant:
                          type: Spectral Grass
                          size: Tiny
                          current_stage: 0
                          yield: 1
                      next_stage:
                        name: Seed
                        description: 'Spectral Grass doesn''t require much care and will grow in almost any climate, simply wait for it to grow'
                        action: Wait
                        growth_time: 30
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - warehouse
                      - plot
                      - next_stage
                    properties:
                      warehouse:
                        $ref: ../models/Warehouse.yaml
                      plot:
                        $ref: ../models/Plot.yaml
                      next_stage:
                        $ref: ../models/Growth-Stage.yaml
                required:
                  - code
                  - message
                  - data
      description: Attempt to plant specified plant in plot
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  name: Spectral Grass Seeds
                  quantity: 8
                  size: Tiny
              properties:
                name:
                  type: string
                  minLength: 1
                quantity:
                  type: number
                  minimum: 1
                size:
                  type: string
                  minLength: 1
              required:
                - name
                - quantity
                - size
        description: 'Define what plant to plant, as well as size and quantity'
      tags:
        - Plots
  '/my/plots/{plot-id}/clear':
    parameters:
      - schema:
          type: string
        name: plot-id
        in: path
        required: true
        description: 'The plot id, e.g. TS-PR-HF!Plot-0'
    put:
      summary: Clear Plot
      operationId: Clear Plot
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful | Successfully cleared plot: Greenitthe|Farm-TS-PR-HF|Plot-0'
                    data:
                      uuid: Greenitthe|Farm-TS-PR-HF|Plot-0
                      location_symbol: TS-PR-HF
                      id: 0
                      size: Average
                      plant_quantity: 0
                      growth_complete_timestamp: 1647917121
                      plant: null
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/Plot.yaml
                required:
                  - code
                  - message
                  - data
      description: Attempt to clear specified plot
      tags:
        - Plots
  '/my/plots/{plot-id}/interact':
    parameters:
      - schema:
          type: string
        name: plot-id
        in: path
        required: true
        description: 'The plot id, e.g. TS-PR-HF!Plot-0'
    patch:
      summary: Interact with Plot
      operationId: Interact with Plot
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      warehouse:
                        uuid: Greenitthe|Warehouse-TS-PR-HF
                        location_symbol: TS-PR-HF
                        tools:
                          Drying Rack: 1
                          Hoe: 1
                          Knife: 1
                          Pestle and Mortar: 1
                          Pitchfork: 1
                          Rake: 1
                          Scroll of Hyperspecific Cloud Cover: 1
                          Shears: 1
                          Sickle: 1
                          Spade: 1
                          Sprouting Pot: 1
                          Water Wand: 1
                        produce: {}
                        seeds:
                          Cabbage Seeds: 1000
                          Gulb Bulb: 996
                          Potato Chunk: 1000
                          Shelvis Fig Seeds: 1000
                          Spectral Grass Seeds: 984
                          Spinosus Vas Seeds: 1000
                        goods:
                          Dragon Fertilizer: 1000
                          Enchanted Dragon Fertilizer: 1000
                          Enchanted Fertilizer: 1000
                          Enchanted Water: 996
                          Fertilizer: 1000
                          Water: 1000
                      plot:
                        uuid: Greenitthe|Farm-TS-PR-HF|Plot-0
                        location_symbol: TS-PR-HF
                        id: 0
                        size: Average
                        plant_quantity: 4
                        growth_complete_timestamp: 1647917244
                        plant:
                          type: Gulb
                          size: Miniature
                          current_stage: 1
                          yield: 1
                      next_stage:
                        name: Seedling
                        description: Gulb seedlings may be fertilized for additional yield
                        action: Fertilize
                        optional: true
                        action_to_skip: Skip
                        consumable_options:
                          - name: Fertilizer
                            quantity: 1
                            added_yield: 0.1
                          - name: Enchanted Fertilizer
                            quantity: 1
                            added_yield: 0.25
                          - name: Dragon Fertilizer
                            quantity: 1
                            added_yield: 0.25
                          - name: Enchanted Dragon Fertilizer
                            quantity: 1
                            added_yield: 0.5
                        growth_time: 60
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - warehouse
                      - plot
                      - next_stage
                    properties:
                      warehouse:
                        $ref: ../models/Warehouse.yaml
                      plot:
                        $ref: ../models/Plot.yaml
                      next_stage:
                        $ref: ../models/Growth-Stage.yaml
                required:
                  - code
                  - message
                  - data
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  action: Water
                  consumable: enchanted water
              properties:
                action:
                  type: string
                  minLength: 1
                consumable:
                  type: string
                  minLength: 1
              required:
                - action
        description: Define action and select consumable if applicable
      description: Attempt to interact with a plot to grow plant and/or harvest it
      tags:
        - Plots
  /islands:
    get:
      summary: Get Islands
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      TS-BD:
                        name: Boldor
                        description: A bustling region that attracts wealth as the gateway to the metropolis of Tyldia on the main trade route taken by the rural craftspeople of smaller regions.
                        ports:
                          Skellig:
                            name: Port Geld
                            symbol: TS-BD-PGD
                            connection: Boldor to Skellig
                            connected_locations: TS-SK-PYS
                            fare: 100
                            duration: 15
                          Tyldia:
                            name: Port Falandra
                            symbol: TS-BD-PFD
                            connection: Boldor to Tyldia
                            connected_locations: TS-TD-PTL
                            fare: 150
                            duration: 90
                      TS-PR:
                        name: Pria
                        description: 'The starting region, a rural and under-developed area that largely escaped the ravages of war by being too small to notice.'
                        ports:
                          Veldis:
                            name: Port Fulgrath
                            symbol: TS-PR-PFG
                            connection: Pria to Veldis
                            connected_locations: TS-VD-PNN
                            fare: 500
                            duration: 30
                      TS-SK:
                        name: Skellig
                        description: 'Though relatively large, Skellig is 90% marshy wetland thanks to a large freshwater spring and is nearly always overcast or rainy. Residents build structures on stilts and largely subsist by filling enchanted barrels of water for sale to drier islands, or working as Mongera for the Simeralian Banking Clan.'
                        ports:
                          Boldor:
                            name: Port Ysili
                            symbol: TS-SK-PYS
                            connection: Skellig to Boldor
                            connected_locations: TS-BD-PGD
                            fare: 100
                            duration: 15
                          Veldis:
                            name: Port Gumpti
                            symbol: TS-SK-PGM
                            connection: Skellig to Veldis
                            connected_locations: TS-VD-PO
                            fare: 100
                            duration: 60
                      TS-TD:
                        name: Tyldia
                        description: 'Tyldia is rather unique, as its land mass is entirely developed, forcing construction to grow vertically. Rather than individual settlements, the region is broken up into several Administrative Districts.'
                        ports:
                          Boldor:
                            name: Port Tuolorme
                            symbol: TS-TD-PTL
                            connection: Tyldia to Boldor
                            connected_locations: TS-BD-PFD
                            fare: 150
                            duration: 90
                          Yoggoth:
                            name: Port Denver
                            symbol: TS-TD-PDV
                            connection: Tyldia to Yoggoth
                            connected_locations: TS-YG-PWD
                            fare: 250
                            duration: 150
                      TS-TT:
                        name: Tritum
                        description: 'Known before The Fracturing as The Bastion of the West, Tritum''s population is divided into warrior and peasant castes. Peasants largely practice subsistence hunting and gathering in Tritum''s vast forests, while the warrior caste is contracted by the Merchant Syndicate of Tyldia to guard the traderoute from Veldis.'
                        ports:
                          Veldis:
                            name: Port Hamstrid
                            symbol: TS-TT-PHM
                            connection: Tritum to Veldis
                            connected_locations: TS-VD-PFG
                            fare: 250
                            duration: 90
                          Yoggoth:
                            name: Port Teleborgo
                            symbol: TS-TT-PTB
                            connection: Tritum to Yoggoth
                            connected_locations: TS-YG-PHB
                            fare: 350
                            duration: 120
                      TS-VD:
                        name: Veldis
                        description: 'Veldis used to be a relatively rural minor region, but after The Fracturing it became the primary supplier of food to Tyldia. The Merchant Syndicate purchased every plot of land on Veldis and hired mages to flatten hills, dig irrigation, and enchant the soil to ensure enough capacity to feed the city.'
                        ports:
                          Pria:
                            name: Port Nayanahd
                            symbol: TS-VD-PNN
                            connection: Veldis to Pria
                            connected_locations: TS-PR-PFG
                            fare: 500
                            duration: 30
                          Skellig:
                            name: Port Olisar
                            symbol: TS-VD-PO
                            connection: Veldis to Skellig
                            connected_locations: TS-SK-PGM
                            fare: 100
                            duration: 60
                          Tritum:
                            name: Port Fulgrath
                            symbol: TS-VD-PFG
                            connection: Veldis to Tritum
                            connected_locations: TS-TT-PHM
                            fare: 250
                            duration: 90
                      TS-YG:
                        name: Yoggoth
                        description: An oft overlooked region due to the long travel times and desert biome as well as the large land-based distance between ports compared to Boldor. The leadership dictates a compulsory state religion following The Church of Ghel-Nytherog and won't welcome new settlers of other faiths.
                        ports:
                          Tritum:
                            name: Port Hellsbrooke
                            symbol: TS-YG-PHB
                            connection: Yoggoth to Tritum
                            connected_locations: TS-TT-PTB
                            fare: 350
                            duration: 120
                          Tyldia:
                            name: Port Waterdry
                            symbol: TS-YG-PWD
                            connection: Yoggoth to Tyldia
                            connected_locations: TS-TD-PDV
                            fare: 250
                            duration: 150
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - map_key_island_symbol
                    description: 'map[string]Island where key is island-symbol'
                    properties:
                      map_key_island_symbol:
                        $ref: ../models/Island.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Islands
      description: Get basic information on all islands
      security: []
  '/islands/{island-symbol}':
    parameters:
      - schema:
          type: string
        name: island-symbol
        in: path
        required: true
        description: 'Location symbol of the island, e.g. TS-PR'
    get:
      summary: Get Specific Island
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      name: Pria
                      description: 'The starting region, a rural and under-developed area that largely escaped the ravages of war by being too small to notice.'
                      ports:
                        Veldis:
                          name: Port Fulgrath
                          symbol: TS-PR-PFG
                          connection: Pria to Veldis
                          connected_locations: TS-VD-PNN
                          fare: 500
                          duration: 30
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/Island.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Specific Island
      description: Get a specific island
      security: []
  /regions:
    get:
      summary: Get Regions
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      TS:
                        name: Tyldian Spur
                        symbol: TS
                        region_group: Northern Extremities
                        description: 'The starting region, a small leg separated from the Central Wheel region-group by Tyldia'
                        islands:
                          - name: Pria
                            symbol: TS-PR
                          - name: Veldis
                            symbol: TS-VD
                          - name: Skellig
                            symbol: TS-SK
                          - name: Tritum
                            symbol: TS-TT
                          - name: Boldor
                            symbol: TS-BD
                          - name: Yoggoth
                            symbol: TS-YG
                          - name: Tyldia
                            symbol: TS-TD
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - map_key_region_symbol
                    description: 'map[string]Region where key is region symbol'
                    properties:
                      map_key_region_symbol:
                        $ref: ../models/Region.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Regions
      description: Get data on all regions
      security: []
  '/regions/{region-symbol}':
    parameters:
      - schema:
          type: string
        name: region-symbol
        in: path
        required: true
        description: 'The region''s location symbol, e.g. '
    get:
      summary: Get Specific Region
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      name: Tyldian Spur
                      symbol: TS
                      region_group: Northern Extremities
                      description: 'The starting region, a small leg separated from the Central Wheel region-group by Tyldia'
                      islands:
                        - name: Pria
                          symbol: TS-PR
                        - name: Veldis
                          symbol: TS-VD
                        - name: Skellig
                          symbol: TS-SK
                        - name: Tritum
                          symbol: TS-TT
                        - name: Boldor
                          symbol: TS-BD
                        - name: Yoggoth
                          symbol: TS-YG
                        - name: Tyldia
                          symbol: TS-TD
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/Region.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Specific Region
      description: Get specific region
      security: []
  /metrics:
    get:
      summary: Get Metrics
      tags:
        - Metrics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      Global Market Buy/Sell:
                        name: Global Market Buy/Sell
                        description: 'Map of all items that have been bought or sold, and how many times each has been bought and sold.'
                        market_item_data:
                          Potato|Large:
                            bought: 1
                            sold: 0
                          Potato|Tiny:
                            bought: 0
                            sold: 1000
                      User Coins:
                        name: User Coins
                        description: Map of every registered user and their coins
                        coins:
                          Green: 1000
                          Greenitthe: 1000
                          Viridis: 1000
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - Global Market Buy/Sell
                      - User Coins
                    properties:
                      Global Market Buy/Sell:
                        type: object
                        required:
                          - name
                          - description
                          - market_item_data
                        properties:
                          name:
                            type: string
                            minLength: 1
                          description:
                            type: string
                            minLength: 1
                          market_item_data:
                            type: object
                            required:
                              - map_key_item_name
                            description: 'map[string]GMBSData where key is the item''s name e.g. "Fertilizer" or "Potato|Large"'
                            properties:
                              map_key_item_name:
                                type: object
                                required:
                                  - bought
                                  - sold
                                properties:
                                  bought:
                                    type: number
                                  sold:
                                    type: number
                      User Coins:
                        type: object
                        required:
                          - name
                          - description
                          - coins
                        properties:
                          name:
                            type: string
                            minLength: 1
                          description:
                            type: string
                            minLength: 1
                          coins:
                            type: object
                            required:
                              - map_key_username
                            description: 'map[string]Integer where key is username'
                            properties:
                              map_key_username:
                                type: number
                required:
                  - code
                  - message
                  - data
      operationId: Get Metrics
      description: Get various server metrics like coins per user and the total number of each good bought and sold
      security: []
  /my/locations:
    get:
      summary: Get My Locations
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      - name: Homestead Farm
                        symbol: TS-PR-HF
                        region_name: Pria
                        x: -40
                        'y': 70
                        description: The small country farm you retired to after the war
                        npcs:
                          - Vince Kosuga
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      $ref: ../models/Location.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get My Locations
      description: Get details on every location visible through the Fog of War (owned farms and locations with an Assistant present)
  '/my/locations/{location-symbol}':
    parameters:
      - schema:
          type: string
        name: location-symbol
        in: path
        required: true
        description: 'The location symbol, e.g. TS-PR-HF'
    get:
      summary: Get Specific Location
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      name: Homestead Farm
                      symbol: TS-PR-HF
                      region_name: Pria
                      x: -40
                      'y': 70
                      description: The small country farm you retired to after the war
                      npcs:
                        - Vince Kosuga
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/Location.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Specific Location
      description: 'Get details on a specific location, if it is visible through the Fog of War (owned farms and locations with an Assistant present)'
  /my/nearby-locations:
    get:
      summary: Get My Nearby Locations
      tags:
        - Locations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      TS-PR:
                        TS-PR-BG: Balgora
                        TS-PR-HF: Homestead Farm
                        TS-PR-PFG: Port Fulgrath
                        TS-PR-YD: Yudoa
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - TS-PR
                    description: 'map[String]map[String]String where key is island symbol'
                    properties:
                      TS-PR:
                        type: object
                        required:
                          - map_key_location_symbol
                        description: 'map[String]String where key is location symbol and value is location name'
                        properties:
                          map_key_location_symbol:
                            type: string
                            minLength: 1
                required:
                  - code
                  - message
                  - data
      operationId: Get My Nearby Locations
      description: 'Get a map of all islands that are visible through the Fog of War (owned farms and locations with an Assistant present), with sub-maps containing the location-symbols and names of the locations on those islands. Useful for discovering new locations when traveling to an island for the first time'
  /my/assistants:
    get:
      summary: Get Assistants
      tags:
        - Assistants
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      - uuid: Greenitthe|Assistant-0
                        id: 0
                        archetype: Hireling
                        improvements: {}
                        location_symbol: TS-PR-HF
                        route: ''
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      $ref: ../models/Assistant.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Assistants
      description: Get data on all assistants associated with the user
  '/my/assistants/{assistant-id}':
    parameters:
      - schema:
          type: string
        name: assistant-id
        in: path
        required: true
        description: 'For an assistant with UUID "Greenitthe|Assistant-0", the ID is just "0"'
    get:
      summary: Get Specific Assistant
      tags:
        - Assistants
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      uuid: Greenitthe|Assistant-0
                      id: 0
                      archetype: Hireling
                      improvements: {}
                      location_symbol: TS-PR-HF
                      route: ''
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/Assistant.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Specific Assistant
      description: Get info on a specific assistant
  /my/farms:
    get:
      summary: Get Farms
      tags:
        - Farms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      - uuid: Greenitthe|Farm-TS-PR-HF
                        location_symbol: TS-PR-HF
                        bonuses: []
                        buildings:
                          Field: 1
                          Home: 1
                        plots:
                          Greenitthe|Farm-TS-PR-HF|Plot-0:
                            uuid: Greenitthe|Farm-TS-PR-HF|Plot-0
                            location_symbol: TS-PR-HF
                            id: 0
                            size: Average
                            plant_quantity: 16
                            growth_complete_timestamp: 1647973101
                            plant:
                              type: Spectral Grass
                              size: Miniature
                              current_stage: 0
                              yield: 1
                          Greenitthe|Farm-TS-PR-HF|Plot-1:
                            uuid: Greenitthe|Farm-TS-PR-HF|Plot-1
                            location_symbol: TS-PR-HF
                            id: 1
                            size: Average
                            plant_quantity: 0
                            growth_complete_timestamp: 0
                            plant: null
                          Greenitthe|Farm-TS-PR-HF|Plot-2:
                            uuid: Greenitthe|Farm-TS-PR-HF|Plot-2
                            location_symbol: TS-PR-HF
                            id: 2
                            size: Modest
                            plant_quantity: 0
                            growth_complete_timestamp: 0
                            plant: null
                          Greenitthe|Farm-TS-PR-HF|Plot-3:
                            uuid: Greenitthe|Farm-TS-PR-HF|Plot-3
                            location_symbol: TS-PR-HF
                            id: 3
                            size: Modest
                            plant_quantity: 0
                            growth_complete_timestamp: 0
                            plant: null
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      $ref: ../models/Farm.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Farms
      description: Get data on all farms owned by the user
  '/my/farms/{location-symbol}':
    parameters:
      - schema:
          type: string
        name: location-symbol
        in: path
        required: true
        description: Farm's location symbol e.g. TS-PR-HF
    get:
      summary: Get Specific Farm
      tags:
        - Farms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      uuid: Greenitthe|Farm-TS-PR-HF
                      location_symbol: TS-PR-HF
                      bonuses: []
                      buildings:
                        Field: 1
                        Home: 1
                      plots:
                        Greenitthe|Farm-TS-PR-HF|Plot-0:
                          uuid: Greenitthe|Farm-TS-PR-HF|Plot-0
                          location_symbol: TS-PR-HF
                          id: 0
                          size: Average
                          plant_quantity: 16
                          growth_complete_timestamp: 1647973101
                          plant:
                            type: Spectral Grass
                            size: Miniature
                            current_stage: 0
                            yield: 1
                        Greenitthe|Farm-TS-PR-HF|Plot-1:
                          uuid: Greenitthe|Farm-TS-PR-HF|Plot-1
                          location_symbol: TS-PR-HF
                          id: 1
                          size: Average
                          plant_quantity: 0
                          growth_complete_timestamp: 0
                          plant: null
                        Greenitthe|Farm-TS-PR-HF|Plot-2:
                          uuid: Greenitthe|Farm-TS-PR-HF|Plot-2
                          location_symbol: TS-PR-HF
                          id: 2
                          size: Modest
                          plant_quantity: 0
                          growth_complete_timestamp: 0
                          plant: null
                        Greenitthe|Farm-TS-PR-HF|Plot-3:
                          uuid: Greenitthe|Farm-TS-PR-HF|Plot-3
                          location_symbol: TS-PR-HF
                          id: 3
                          size: Modest
                          plant_quantity: 0
                          growth_complete_timestamp: 0
                          plant: null
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/Farm.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Specific Farm
      description: Get data on a specific farm
  /my/contracts:
    get:
      summary: Get My Contracts
      tags:
        - Quests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - uuid
                        - id
                        - type
                        - location_symbol
                        - NPC
                      properties:
                        uuid:
                          type: string
                          minLength: 1
                        id:
                          type: number
                        type:
                          type: string
                          minLength: 1
                        location_symbol:
                          type: string
                          minLength: 1
                        NPC:
                          type: string
                          minLength: 1
                        terms:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            required:
                              - npc
                            properties:
                              npc:
                                type: string
                                minLength: 1
                        reward:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            required:
                              - type
                              - item
                              - quantity
                            properties:
                              type:
                                type: string
                                minLength: 1
                              item:
                                type: string
                                minLength: 1
                              quantity:
                                type: number
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      - uuid: Greenitthe|Contract-0
                        id: 0
                        type: Talk
                        location_symbol: TS-PR-HF
                        NPC: Viridis
                        terms:
                          - npc: Reldor
                        reward:
                          - type: Currency
                            item: Coins
                            quantity: 100
      operationId: Get My Contracts
      description: Get information on all contracts associated with user
  '/my/contracts/{contract-id}':
    parameters:
      - schema:
          type: string
        name: contract-id
        in: path
        required: true
        description: 'For an assistant with UUID "Greenitthe|Contract-0", the ID is just "0"'
    get:
      summary: Get Specific Contract
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      uuid:
                        type: string
                        minLength: 1
                      id:
                        type: number
                      type:
                        type: string
                        minLength: 1
                      location_symbol:
                        type: string
                        minLength: 1
                      NPC:
                        type: string
                        minLength: 1
                      terms:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          required:
                            - npc
                          properties:
                            npc:
                              type: string
                              minLength: 1
                      reward:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          required:
                            - type
                            - item
                            - quantity
                          properties:
                            type:
                              type: string
                              minLength: 1
                            item:
                              type: string
                              minLength: 1
                            quantity:
                              type: number
                    required:
                      - uuid
                      - id
                      - type
                      - location_symbol
                      - NPC
                      - terms
                      - reward
                required:
                  - code
                  - message
                  - data
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      uuid: Greenitthe|Contract-0
                      id: 0
                      type: Talk
                      location_symbol: TS-PR-HF
                      NPC: Viridis
                      terms:
                        - npc: Reldor
                      reward:
                        - type: Currency
                          item: Coins
                          quantity: 100
      operationId: Get Specific Contract
      tags:
        - Quests
      description: Get data on a specific contract
  /about:
    get:
      summary: Get About
      tags:
        - Information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/About.yaml
      operationId: Get About
      description: |-
        Describes the various available /about/... endpoints available

        data.information is map[string]string
  /about/sizes:
    get:
      summary: Get About Sizes
      tags:
        - Information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/About.yaml
      operationId: Get About Sizes
      description: |-
        Describes the Size enum used by the game for plots, plants, and produce. The information field is the map of string size to integer size.

        data.information is map[string]integer
  /about/magic:
    get:
      summary: Get About Magic
      tags:
        - Information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/About.yaml
      operationId: Get About Magic
      description: |-
        Describes various parts of the magic system including lore, arcane flux, and distortion. The information field is a map of string topic to string information.

        data.information is map[string]string
  /about/plants:
    get:
      summary: Get About Plants
      tags:
        - Information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/About.yaml
      operationId: Get About Plants
      description: |-
        Describes plants and the stages they go through during growth, as well as the actions used to advance them through these stages

        data.information is map[string]string
  /about/world:
    get:
      summary: Get About World
      tags:
        - Information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/About.yaml
      operationId: Get About World
      description: |-
        Describes the lore of the world, the player, and the mechanical grouping of locations

        data.information is map[string]string
  /rites:
    get:
      summary: Get Rites
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data:
                      APCRPHNSPRGGNCRGNS:
                        runic_symbol: APCRPHNSPRGGNCRGNS
                        name: Invoking the Apocryphon Description of Sprigganic Origins
                        description: 'Summon a Sprite archetype Assistant with Vocatus Blossom & Fairy Dust tea, binding them with the Song of Sprigganhome played on a spirit flute'
                        required_buildings:
                          Summoning Circle: 1
                        minimum_distortion_tier: 3
                        maximum_distortion_tier: 5
                        arcane_flux: 500
                        lattice_rejection_time: 60
                        currencies: null
                        materials:
                          tools:
                            Spirit Flute: 1
                          goods:
                            Enchanted Water: 20
                            Vial of Fairy Dust: 1
                            Vocatus Blossom: 1
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - map_string_key_runic_symbol
                    properties:
                      map_string_key_runic_symbol:
                        $ref: ../models/Rite.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Rites
      description: Get all rites known by your user
      tags:
        - Rites
  '/rites/{runic-symbol}':
    parameters:
      - schema:
          type: string
        name: runic-symbol
        in: path
        required: true
        description: 'The runic symbol of the rite you want to select, alpha characters only'
    get:
      summary: Get Specific Rite
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    code: 1
                    message: '[Generic_Success] Request Successful'
                    data: {}
                properties:
                  code:
                    type: number
                  message:
                    type: string
                    minLength: 1
                  data:
                    $ref: ../models/Rite.yaml
                required:
                  - code
                  - message
                  - data
      operationId: Get Specific Rite
      tags:
        - Rites
      description: Get a specific rite if it is known to your user
components:
  schemas: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: When you register a new user you will be granted a private bearer token which grants authorization to use the API.
  responses: {}
tags:
  - name: Assistants
  - name: Farms
  - name: Information
  - name: Locations
  - name: Markets
  - name: Metrics
  - name: Plants
  - name: Plots
  - name: Quests
  - name: Rites
  - name: Users
  - name: Warehouses
  - name: World
security:
  - bearerAuth: []
